{"mappings":"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","sources":["src/ts/models/Userid.ts","src/ts/userfunctions.ts","src/ts/script.ts","src/ts/data.ts"],"sourcesContent":["export class userID {\n  constructor(\n    public name: string, \n    public snatchPR: number, \n    public cleanPR: number, \n    public daysDone: [boolean, boolean, boolean, boolean]\n    ) {}\n}\n","import { IAddResponse } from \"./models/IAddResult\";\nimport { userID } from \"./models/Userid\";\nimport { openUserInput, userIDlist, displayUserInfo, showWeeklyProg } from \"./script\"\n\nexport function getUserInput(e: SubmitEvent) {\n  {\n    e.preventDefault();\n\n    let userInput: string = (\n      document.getElementById(\"userName\") as HTMLInputElement\n    ).value;\n\n    let prSnatchInput: string = (\n      document.getElementById(\"snatchRepMaxValue\") as HTMLInputElement\n    ).value;\n    let prSnatchNumber: number = parseInt(prSnatchInput);\n\n    let prCleanInput: string = (\n      document.getElementById(\"cleanRepMaxValue\") as HTMLInputElement\n    ).value;\n    let prCleanNumber: number = parseInt(prCleanInput);\n\n    let doneDays: [boolean, boolean, boolean, boolean] = [false, false, false, false];\n    \n    createNewUser(userInput, prSnatchNumber, prCleanNumber, doneDays, userIDlist);\n\n    openUserInput();\n\n    localStorage.setItem(\"userData\", JSON.stringify(userIDlist));\n\n  };\n}\n\nexport function addUserID(nameText: string, snatchMax: number, cleanMax: number, doneDays: [boolean, boolean, boolean, boolean], newUserInfo: userID[]): IAddResponse {\n  if (nameText.length > 2 || Number.isNaN(snatchMax) == false || Number.isNaN(cleanMax) == false) {\n    let newUser = new userID(nameText, snatchMax, cleanMax, doneDays);\n    newUserInfo.unshift(newUser); \n    console.log(newUser);\n    return { success: true, error: \"\" };\n  } else {\n    return { success: false, error: \"Fyll i rÃ¤tt info!\" };\n  }\n}\n\nexport function createNewUser(nameText: string, snatchMax: number, cleanMax: number, doneDays: [boolean, boolean, boolean, boolean], newUserInfo: userID[]) {\n  let result = addUserID(nameText, snatchMax, cleanMax, doneDays,newUserInfo);\n\n  if (result.success) {\n    console.log(result);\n    console.log(newUserInfo[0].name);\n    showWeeklyProg();\n    displayUserInfo(nameText, snatchMax, cleanMax )\n  } else {\n    displayError(result.error, true);\n  }\n}\n\nexport function displayError(error: string, show: boolean) {\n  let errorContainer: HTMLDivElement = document.getElementById(\n    \"error\"\n  ) as HTMLDivElement;\n\n  errorContainer.innerHTML = error;\n\n  if (show) {\n    errorContainer.classList.add(\"show\");\n  } else {\n    errorContainer.classList.remove(\"show\");\n  }\n}\n\n// export function changeTodo(todo: Todo) {\n//   todo.done = !todo.done;\n// }\n\n// export function removeAllTodos(todos: Todo[]) {\n//   todos.splice(0, todos.length);\n// }\n","import { getUserInput, addUserID, createNewUser, displayError} from \"./userfunctions\";\nimport { userID } from \"./models/Userid\";\nimport { tisdag, passfyra, passtre, torsdag } from \"./data\";\n\n//let bajskorv = JSON.parse(localStorage.getItem(\"tisdag\") || \"[]\");\n\n\n\nexport let userIDlist: userID[] = JSON.parse(localStorage.getItem(\"userData\") || \"[]\"); ;\n\nlet weeklyProgList = [tisdag, torsdag, passtre]\n\nlet daysDoneCount: number = 0;\nlet currentDayCount: number = 0;\nlet currentLiftCount: number = 0;\nlet dayName: [string, string, string] = [\"Tisdag\", \"Torsdag\", \"Pass Tre\"];\nlet dayNameShort: [string, string, string, string] = [\"TIS\", \"TOR\", \"TRE\", \"FYRA\"];\n\n(document.getElementById(\"oneRepMax\") as HTMLFormElement)?.addEventListener(\n  \"submit\",\n  (e: SubmitEvent) => {getUserInput(e)}\n);\n\n(document.getElementById(\"showSettings\") as HTMLLinkElement)?.addEventListener('click', openUserInput);\n\nfunction showCorrectDay(text: any) {\n  let dayContainer: HTMLHeadingElement = document.getElementById(\n    \"currentProg\"\n  ) as HTMLHeadingElement;\n\n  dayContainer.innerHTML = `${dayName[text]} >`;\n  currentDayCount = text;\n  console.log(currentDayCount)\n\n};\n\n\nfunction createProgram(workouts: any) {\n  //localStorage.setItem(\"workouts\", JSON.stringify(workouts));\n\n  console.log(\"createProgram\");\n\n  let setContainer: HTMLUListElement = document.getElementById(\n    \"repsAndSets\"\n  ) as HTMLUListElement;\n  \n  if (setContainer) {\n    setContainer.innerHTML = \"\";\n  }\n\n  let ovningContainerInfo: HTMLParagraphElement = document.getElementById(\n    \"selectedOvningInfo\"\n  ) as HTMLParagraphElement;\n\n  if (ovningContainerInfo) {\n    ovningContainerInfo.innerHTML = \"\";\n  }\n\n  if (currentLiftCount > workouts.length-1) {\n    console.log(\"hej\")\n    return\n  }\n\n  for (let i = 0; i < workouts[currentLiftCount].percent.length ; i++) {\n    let li: HTMLLIElement = document.createElement(\"li\");\n    let whatPR = workouts[currentLiftCount].TypeOfPr == \"clean\" ? userIDlist[0].cleanPR : userIDlist[0].snatchPR;\n    // jo den funkar!\n    li.classList.add(\"repsAndSets__text\");\n    li.innerHTML = `\n    ${workouts[currentLiftCount].reps[i]} \n    reps @\n    ${Math.round(whatPR * (workouts[currentLiftCount].percent[i]/100))}\n    kg\n    `;\n    li.addEventListener(\"click\", (e) => {\n      (e.currentTarget as HTMLLIElement).classList.add(\"repsAndSets__text--done\");\n      checkIfOvningDone(workouts[currentLiftCount]);\n      \n    });\n    \n    setContainer.appendChild(li);\n  }\n}\n\nfunction showCorrectOvning(workouts: any) {\n  console.log(\"showCorrectOvning\")\n  \n  let ovningContainer: HTMLParagraphElement = document.getElementById(\n    \"selectedOvning\"\n  ) as HTMLParagraphElement;\n\n  if (ovningContainer) {\n    ovningContainer.innerHTML = \"\";\n  }\n  \n  createProgram(workouts);  \n\n  for (let i = 0; i < workouts.length; i++) {\n    let spam: HTMLSpanElement = document.createElement(\"span\");\n    if (workouts[i].done == true) {\n      spam.classList.add(\"currentSelectedOvningDone\");\n      spam.innerHTML = `${workouts[i].name} >`;\n\n      spam.addEventListener(\"click\", () => {\n      //currentLiftCount = i;\n      createProgram(workouts);\n      showCorrectOvning(weeklyProgList[currentDayCount]);\n      //checkIfDayIsDone(workouts)\n      //lÃ¤gg i \"active\" button grej kanske\n    });\n      \n\n    } else {\n      // funkar ej ??? why ??? spam.classList.remove(\"currentSelectedOvning\");\n      spam.innerHTML = `${workouts[i].name} >`;\n      if (i == currentLiftCount) {\n        spam.classList.add(\"currentSelectedOvning\");\n      }\n      spam.addEventListener(\"click\", () => {\n      currentLiftCount = i;\n      spam.classList.add(\"currentSelectedOvning\");\n      createProgram(workouts);\n      showCorrectOvning(weeklyProgList[currentDayCount]);\n      //lÃ¤gg i \"active\" button grej kanske\n    });\n\n    }    \n\n    ovningContainer.appendChild(spam);\n\n  };\n\n}\n\nexport function showWeeklyProg() {\n\n  console.log(\"showWeeklyProg\");\n\n  let progContainer: HTMLDivElement = document.getElementById(\n    \"weeklyProgram\"\n  ) as HTMLDivElement;\n  \n  if (progContainer) {\n    progContainer.innerHTML = \"\";\n  }\n\n  for (let i = 0; i < weeklyProgList.length; i++) {\n    let btn: HTMLButtonElement = document.createElement(\"button\");\n    // jo den funkar!\n    btn.innerHTML = `${dayNameShort[i]}`;\n    if (userIDlist[0].daysDone[i] == true) {\n      btn.classList.add(\"doneWeek\");\n    }\n    btn.addEventListener(\"click\", () => {\n      currentLiftCount = 0;\n      showCorrectDay(i);\n      showCorrectOvning(weeklyProgList[i]);\n      //createProgram(weeklyProgList[i][0]);\n      //checkIfDayIsDone(weeklyProgList[i][0].done);\n        \n        //lÃ¤gg i \"active\" button grej kanske\n    })\n    progContainer.appendChild(btn);\n  }\n  \n\n}\n\nexport function openUserInput() {\n  let inputContainer: HTMLDivElement = document.getElementById(\n    \"setUser\"\n  ) as HTMLDivElement;\n\n  if (inputContainer.style.display == \"flex\") {\n    inputContainer.style.display = \"none\";\n  } else {\n    inputContainer.style.display = \"flex\";\n  }\n}\n\nexport function displayUserInfo(text: string, snatchNr: number, cleanNr: number ) {\n  let nameContainer: HTMLHeadingElement = document.getElementById(\n    \"showUserName\"\n  ) as HTMLHeadingElement;\n  nameContainer.innerHTML = `${text}`\n\n  let snatchPBContainer: HTMLHeadingElement = document.getElementById(\n    \"showSnatchPB\"\n  ) as HTMLHeadingElement;\n  snatchPBContainer.innerHTML = `${snatchNr}`\n\n  let cleanPBContainer: HTMLHeadingElement = document.getElementById(\n    \"showCleanPB\"\n  ) as HTMLHeadingElement;\n  cleanPBContainer.innerHTML = `${cleanNr}`\n\n};\n\nfunction checkIfDayIsDone(workouts: any) {\n\n  // funkar typ\n  let btn: HTMLButtonElement = document.querySelector('[data-id=\"0\"]') as HTMLButtonElement;\n\n  let list: [string, string] = [\"KÃ¶r passet igen\", \"NÃ¤sta pass\"];\n\n  let spanCount: HTMLSpanElement = document.getElementById(\"passCount\") as HTMLSpanElement;\n\n  let setContainer: HTMLUListElement = document.getElementById(\n    \"repsAndSets\"\n  ) as HTMLUListElement;\n\n  if (workouts[0].done == true && workouts[1].done == true  && workouts[2].done == true ) {\n    if (setContainer) {\n      setContainer.innerHTML = \"\";\n    }\n\n    userIDlist[0].daysDone[currentDayCount] = true;\n\n    daysDoneCount = 0;\n\n    for (let i = 0; i < userIDlist[0].daysDone.length; i++) {\n      if ( userIDlist[0].daysDone[i] == true) {\n        daysDoneCount++\n      }\n    }\n    \n    localStorage.setItem(\"userData\", JSON.stringify(userIDlist));\n\n    console.log(\"DAY IS DONE!!\")\n    console.log(\"btn.classList.add(\");\n    showWeeklyProg();\n    spanCount.innerHTML = daysDoneCount.toString();\n\n    for (let i = 0; i < list.length; i++) {\n      let li: HTMLLIElement = document.createElement(\"li\");\n      li.classList.add(\"repsAndSets__text\");\n      li.innerHTML = `${list[i]}`;\n      li.addEventListener(\"click\", (e) => {\n        let option = (e.currentTarget as HTMLLIElement).innerHTML;\n        if (option == list[0]) {\n          workouts[0].done = false; workouts[1].done = false; workouts[2].done = false;\n          currentLiftCount = 0;\n          showCorrectDay(currentDayCount)\n          showCorrectOvning(weeklyProgList[currentDayCount])\n          console.log(weeklyProgList[currentDayCount]);\n        } else {\n          currentDayCount++\n          currentLiftCount = 0;\n          showCorrectDay(currentDayCount)\n          showCorrectOvning(weeklyProgList[currentDayCount])\n          console.log(weeklyProgList[currentDayCount]);\n          \n        \n        }\n        \n      });\n  \n      setContainer.appendChild(li);\n    }\n  }\n  \n\n}\n\nfunction checkIfOvningDone(workoutOvning: any) {\n  let liList: NodeListOf<HTMLLIElement> = document.querySelectorAll(\".repsAndSets__text\") as NodeListOf<HTMLLIElement>;\n  let liArray = Array.from(liList);\n  let doneList: NodeListOf<HTMLLIElement> = document.querySelectorAll(\".repsAndSets__text--done\") as NodeListOf<HTMLLIElement>;\n  let doneArray = Array.from(doneList);\n\n  if (liArray.length == doneArray.length) {\n    workoutOvning.done = true;\n    console.log(workoutOvning);\n    console.log(currentLiftCount)\n    currentLiftCount++;\n    console.log(currentLiftCount)\n    showWeeklyProg()\n    showCorrectOvning(weeklyProgList[currentDayCount]);\n    checkIfDayIsDone(weeklyProgList[currentDayCount]);\n\n  }\n\n}\n\nif (userIDlist[0] == null) {\n  openUserInput();\n} else {\n  displayUserInfo(userIDlist[0].name, userIDlist[0].snatchPR, userIDlist[0].cleanPR);\n  showWeeklyProg();\n}\n\n//1. get user info on load (local storage)\n//2. load/publish weekly program\n//3. on click display selected workout\n//3.1 update correct info\n//4. workout finish = update weekly program inf","export const tisdag = \r\n    [\r\n        {\r\n            \"name\": \"Ryck\",\r\n            \"percent\": [65,\t70,\t75,\t80,\t85,\t87, 90, 93],\r\n            \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n            \"setsDone\": [false, false, false, false, false, false],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": true,\r\n            \"TypeOfPr\": \"snatch\"\r\n        },\r\n        {\r\n            \"name\": \"StÃ¶t\",\r\n            \"percent\": [65,\t70,\t75,\t80,\t85,\t87],\r\n            \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n            \"setsDone\": [false, false, false, false, false, false],\r\n            \"description\": \"Stanna i lÃ¤get dÃ¤r du fÃ¥ngar cleanen\",\r\n            \"done\": true,\r\n            \"TypeOfPr\": \"clean\"\r\n        },\r\n        {\r\n            \"name\": \"Backsquat\",\r\n            \"percent\": [75,\t80,\t85,\t90,\t95, 97, 100, 103],\r\n            \"reps\": [2, 2, 2, 2, 2, 2, 2, 2],\r\n            \"setsDone\": [false, false, false, false, false, false],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"clean\"\r\n        }\r\n    ];\r\n\r\nexport const torsdag =\r\n    [\r\n        {\r\n            \"name\": \"Styrkeryck\",\r\n            \"percent\": [52,\t57,\t62,\t67,\t72,\t77,\t80,\t83],\r\n            \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"clean\"\r\n        },\r\n        {\r\n            \"name\": \"SvÃ¤nd+ÃstÃ¶t\",\r\n            \"percent\": [52,\t57,\t62,\t67,\t72,\t77,\t80,\t83],\r\n            \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n            \"description\": \"StyrkevÃ¤ndning + Ã¶verstÃ¶t\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"snatch\"\r\n        },\r\n        {\r\n            \"name\": \"Frontsquat\",\r\n            \"percent\": [68,\t73,\t78,\t83,\t88,\t92,\t95,\t98],\r\n            \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"clean\"\r\n        }\r\n    ];\r\n\r\nexport const passtre = [\r\n    {\r\n        \"name\": \"Ryck\",\r\n        \"percent\": [55,\t58,\t61,\t64,\t67,\t67,\t70,\t73],\r\n        \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n        \"description\": \"Kontrollerat ner, snabbt upp\",\r\n        \"done\": false,\r\n        \"TypeOfPr\": \"clean\"\r\n    },\r\n    {\r\n        \"name\": \"StÃ¶t\",\r\n        \"percent\": [55,\t58,\t61,\t64,\t67,\t67,\t70,\t73],\r\n        \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n        \"description\": \"Stanna i lÃ¤get dÃ¤r du fÃ¥ngar cleanen\",\r\n        \"done\": false,\r\n        \"TypeOfPr\": \"snatch\"\r\n    },\r\n    {\r\n        \"name\": \"Tagga fÃ¶r tÃ¤vling\",\r\n        \"percent\": [97,\t99,\t99,\t100, 110, 1000, 10000, 12345],\r\n        \"reps\": [1, 1, 1, 1, 1, 1, 1, 1],\r\n        \"description\": \"Stanna i lÃ¤get dÃ¤r du fÃ¥ngar cleanen\",\r\n        \"done\": false,\r\n        \"TypeOfPr\": \"snatch\"\r\n    }\r\n];\r\n    \r\n\r\nexport const passfyra = \r\n    [\r\n        {\r\n            \"name\": \"Ryck\",\r\n            \"percent\": [65,\t70,\t75,\t80,\t85,\t87],\r\n            \"reps\": [1, 1, 1, 1, 1, 1],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"snatch\"\r\n        },\r\n        {\r\n            \"name\": \"StÃ¶t\",\r\n            \"percent\": [65,\t70,\t75,\t80,\t85,\t87],\r\n            \"reps\": [1, 1, 1, 1, 1, 1],\r\n            \"description\": \"Stanna i lÃ¤get dÃ¤r du fÃ¥ngar cleanen\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"clean\"\r\n        },\r\n        {\r\n            \"name\": \"Backsquat\",\r\n            \"percent\": [75,\t80,\t85,\t90,\t95, 97],\r\n            \"reps\": [2, 2, 2, 2, 2, 2],\r\n            \"description\": \"Kontrollerat ner, snabbt upp\",\r\n            \"done\": false,\r\n            \"TypeOfPr\": \"clean\"\r\n        }\r\n    ];"],"names":["$0009210543fdfc4c$export$8067bddea3a0be3f","constructor","name","snatchPR","cleanPR","daysDone","$db6c6c062c258e92$export$40408d37b5b80ca0","e","preventDefault","userInput","document","getElementById","value","prSnatchInput","prSnatchNumber","parseInt","prCleanInput","nameText","snatchMax","cleanMax","doneDays","newUserInfo","result","length","Number","isNaN","newUser","unshift","console","log","success","error","$db6c6c062c258e92$export$673f8e50c8dbeb32","$297d20d9ea1adc51$export$b957dfc66baf886a","$297d20d9ea1adc51$export$b13356725ed06a05","show","errorContainer","innerHTML","classList","add","remove","$db6c6c062c258e92$export$7e605cc38c3f1d09","$db6c6c062c258e92$export$b51ea21071015da9","$297d20d9ea1adc51$export$97bc188cac0c5061","$297d20d9ea1adc51$export$83c638028c9ade39","localStorage","setItem","JSON","stringify","parse","getItem","$297d20d9ea1adc51$var$weeklyProgList","percent","reps","setsDone","description","done","TypeOfPr","$297d20d9ea1adc51$var$daysDoneCount","$297d20d9ea1adc51$var$currentDayCount","$297d20d9ea1adc51$var$currentLiftCount","$297d20d9ea1adc51$var$dayName","$297d20d9ea1adc51$var$dayNameShort","$297d20d9ea1adc51$var$showCorrectDay","text","$297d20d9ea1adc51$var$createProgram","workouts","setContainer","ovningContainerInfo","i","li","createElement","whatPR","Math","round","addEventListener","currentTarget","$297d20d9ea1adc51$var$checkIfOvningDone","appendChild","$297d20d9ea1adc51$var$showCorrectOvning","ovningContainer","spam","progContainer","btn","inputContainer","style","display","snatchNr","cleanNr","workoutOvning","liList","querySelectorAll","liArray","Array","from","doneList","doneArray","querySelector","list","spanCount","toString","i1","$297d20d9ea1adc51$var$checkIfDayIsDone"],"version":3,"file":"index.0ce31007.js.map"}